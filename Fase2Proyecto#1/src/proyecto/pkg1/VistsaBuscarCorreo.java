/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.pkg1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sthephan
 */
public class VistsaBuscarCorreo extends javax.swing.JFrame {

    /**
     * Creates new form VistsaBuscarCorreo
     */
    public VistsaBuscarCorreo() {
        initComponents();
    }
    
    public static ArrayList<Correo> correos = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmisorBusqueda = new javax.swing.JTextField();
        txtReceptorBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Busqueda = new javax.swing.JList<>();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Emisor");

        jLabel2.setText("Receptor");

        Busqueda.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Busqueda);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(31, 31, 31)
                                .addComponent(txtEmisorBusqueda))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtReceptorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmisorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtReceptorBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalir))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(txtEmisorBusqueda.getText().equals("") && txtReceptorBusqueda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Algun campo se encuentra vacio", "InfoBox: " + "Error en Busqueda de Correo", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DefaultListModel modelo = new DefaultListModel();
            SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy-HH:mm");
            Correo b = new Correo();
            DescIndiceListaUsuario dec;
            b.setEmisor(txtEmisorBusqueda.getText().toCharArray());
            b.setReceptor(txtReceptorBusqueda.getText().toCharArray());
            try{
                dec = leerDescriptorIndice(Proyecto1.descArbolCorreos);
                BusquedaDeCorreos(leerCorreo(Proyecto1.arbolCorreos, dec.getRegistroInicial()), b);
            }catch(Exception e){
                e.printStackTrace();
            }
            if(correos.size() > 0){
                for(int i = 0; i < correos.size(); i++){
                    Correo c = correos.get(i);
                    if(c.isEstatus()){
                        String linea = "";
                        linea += "Emisor: ";
                        linea += String.valueOf(c.getEmisor());
                        linea += "----";
                        linea += "Receptor: ";
                        linea += String.valueOf(c.getReceptor());
                        linea += "----";
                        linea += "Asunto: ";
                        linea += String.valueOf(c.getAsunto());
                        linea += "----";
                        linea += "Mensaje: ";
                        linea += String.valueOf(c.getMensaje());
                        linea += "----";
                        linea += "Fecha: ";
                        linea += date.format(c.getFechaTransaccion());
                        modelo.addElement(linea);
                    }
                }
                Busqueda.setModel(modelo);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        txtEmisorBusqueda.setText("");
        txtReceptorBusqueda.setText("");
        DefaultListModel modelo = new DefaultListModel();
        Busqueda.setModel(modelo);
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void BusquedaDeCorreos(Correo actual, Correo Busqueda) throws IOException, ParseException{
        if(actual != null){
            BusquedaDeCorreos(leerCorreo(Proyecto1.arbolCorreos, actual.getIzquierdo()), Busqueda);
            if(comparar(actual, Busqueda) == 0){
                correos.add(actual);
            }
            BusquedaDeCorreos(leerCorreo(Proyecto1.arbolCorreos, actual.getDerecho()), Busqueda);
        }
    }
    
    /**
     * Funcion que lee el contenido del descriptor del indice de usuarios asociados a listas
     * @param archivo Archivo del descriptor que se va a leer
     * @return informacion leida del descriptor
     * @throws IOException 
     */
    public DescIndiceListaUsuario leerDescriptorIndice(File archivo) throws IOException{
        DescIndiceListaUsuario desc = null;
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy-HH:mm");
        BufferedReader br = null;
	FileReader fr = null;
	fr = new FileReader(archivo);
        br = new BufferedReader(fr);
        StringBuilder texto = new StringBuilder();
        int line = 0;
        while ((line = br.read()) != -1) {
            char val = (char)line;
            texto.append(val);
        }
        fr.close();
        br.close();
        if(texto.toString().equals("")){
            return desc;
        }
        else{
            try{
                String[] contenido = texto.toString().split("\\|");
                desc = new DescIndiceListaUsuario(contenido[0], date.parse(contenido[1]), contenido[2], date.parse(contenido[3]), contenido[4], Integer.parseInt(contenido[5]), Integer.parseInt(contenido[6]), Integer.parseInt(contenido[7]), Integer.parseInt(contenido[8]));
            }catch(Exception e){
                e.printStackTrace();
            }
            return desc;
        }
    }
    
    /**
     * Metodo que lee una entrada en la bitacora de correos n bas e a una posicoin especifica
     * @param archivo archivo de la bitacora de correos
     * @param posicion posicion de la que se lee la entrada
     * @return Objeto correo con los datos de la entrada
     * @throws IOException
     * @throws ParseException 
     */
    public Correo leerCorreo(File archivo, int posicion) throws IOException, ParseException{
        Correo c = new Correo();
        RandomAccessFile raf = new RandomAccessFile(archivo, "rw");
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy-HH:mm");
        if(posicion > 1){
            raf.seek((posicion - 1) * 200);
        }
        else{
            if(posicion == -1){
                c = null;
                return c;
            }
            else{
                raf.seek(0);
            }
        }
        String line = raf.readLine();
        if(!line.equals("")){
            String[] contenido = line.split("\\|");
            c.setIzquierdo(Integer.parseInt(contenido[0]));
            c.setDerecho(Integer.parseInt(contenido[1]));
            c.setEmisor(quitarExtra(contenido[2]).toCharArray());
            c.setReceptor(quitarExtra(contenido[3]).toCharArray());
            c.setFechaTransaccion(date.parse(contenido[4]));
            c.setAsunto(quitarExtra(contenido[5]).toCharArray());
            c.setMensaje(quitarExtra(contenido[6]).toCharArray());
            if(contenido[7].equals("1")){
                c.setEstatus(true);
            }
            else{
                c.setEstatus(false);
            }
        }
        else{
            c = null;
        }
        return c;
    }
    
    /**
     * Funcion que remueve los caracteres especiales "~" de una cadena 
     * @param texto cadena a la que se la van a remover los caracteres especiales
     * @return texto sin caracteres especiales
     */
    public String quitarExtra(String texto){
        int cont = 0;
        for(int i = 0; i < texto.length(); i++){
            if(texto.charAt(i) == '~'){
                cont++;
            }
        }
        int pos = texto.length() - cont;
        texto = texto.substring(0, pos);
        return texto;
    }
    
    /**
     * Metodo de comparacion de llaves emisor, receptor y fecha de transaccion
     * @param obj1 Correo que se esta comprando 
     * @param obj2 Correo con el que se va a comparar
     * @return 
     */
    public int comparar(Correo obj1, Correo obj2) {
        if (String.valueOf(obj1.getEmisor()).toUpperCase().equals(String.valueOf(obj2.getEmisor()).toUpperCase())) {
            if (String.valueOf(obj1.getReceptor()).toUpperCase().equals(String.valueOf(obj2.getReceptor()).toUpperCase())) {
                return 0;
            }
            if (String.valueOf(obj1.getReceptor()).equals("")) {
                return -1;
            }
            if (String.valueOf(obj2.getReceptor()).equals("")) {
                return 1;
            }
            return String.valueOf(obj1.getReceptor()).toUpperCase().compareTo(String.valueOf(obj2.getReceptor()).toUpperCase());
        }
        if (String.valueOf(obj1.getEmisor()).equals("")) {
            return -1;
        }
        if (String.valueOf(obj2.getEmisor()).equals("")) {
            return 1;
        }
        return String.valueOf(obj1.getEmisor()).toUpperCase().compareTo(String.valueOf(obj2.getEmisor()).toUpperCase());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistsaBuscarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistsaBuscarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistsaBuscarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistsaBuscarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistsaBuscarCorreo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Busqueda;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtEmisorBusqueda;
    private javax.swing.JTextField txtReceptorBusqueda;
    // End of variables declaration//GEN-END:variables
}
